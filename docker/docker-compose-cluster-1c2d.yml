version: "2.17.3"
# 1.先创建 docker bridge 网络，subnet与gateway为本机网段
# docker network create --driver=bridge --subnet=172.16.0.0/16 --gateway=172.16.0.1 iotdb
# 2.在当前目录下运行docker-compose文件
# docker-compose up -d
# docker-compose -f *****.yml up -d

services:
  iodb-confignode:
    image: apache/iotdb:1.1.0-confignode
    hostname: iotdb-confignode
    container_name: iotdb-confignode
    environment:
      - cn_internal_address=iotdb-confignode
      - cn_internal_port=10710
      - cn_consensus_port=10720
      - cn_target_config_node_list=iotdb-confignode:10710
    volumes:
        - ./data/confignode:/iotdb/data
        - ./logs/confignode:/iotdb/logs
    networks:
      iotdb:
        ipv4_address: 172.16.0.2

  iotdb-datanode1:
    image: apache/iotdb:1.1.0-datanode
    hostname: iotdb-datanode-1
    container_name: iotdb-datanode-1
    ports:
      - "6667:6667"
    environment:
      - dn_rpc_address=iotdb-datanode-1
      - dn_internal_address=iotdb-datanode-1
      - dn_target_config_node_list=iotdb-confignode:10710
      - dn_rpc_port=6667
      - dn_mpp_data_exchange_port=10740
      - dn_schema_region_consensus_port=10750
      - dn_data_region_consensus_port=10760
    volumes:
      - ./data/datanode1:/iotdb/data/
      - ./logs/datanode1:/iotdb/logs/
    networks:
      iotdb:
        ipv4_address: 172.16.0.3

  iotdb-datanode2:
    image: apache/iotdb:1.1.0-datanode
    hostname: iotdb-datanode-2
    container_name: iotdb-datanode-2
    environment:
      - dn_rpc_address=iotdb-datanode-2
      - dn_internal_address=iotdb-datanode-2
      - dn_target_config_node_list=iotdb-confignode:10710
      - dn_rpc_port=6667
      - dn_mpp_data_exchange_port=10740
      - dn_schema_region_consensus_port=10750
      - dn_data_region_consensus_port=10760
    volumes:
      - ./data/datanode2:/iotdb/data/
      - ./logs/datanode2:/iotdb/logs/
    networks:
      iotdb:
        ipv4_address: 172.16.0.4

networks:
  iotdb:
    external: true